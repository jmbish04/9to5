---
import AdminLayout from '../../layouts/AdminLayout.astro';
import { listWorkflows, listTasks } from '../../lib/api';
// import { Badge } from '../../components/ui/badge';
import Button from '../../components/ui/button.astro';
import Card from '../../components/ui/card.astro';
import CardHeader from '../../components/ui/card-header.astro';
import CardTitle from '../../components/ui/card-title.astro';
import CardContent from '../../components/ui/card-content.astro';

let workflows = [];
let tasks = [];
let loadError = null;
try {
  [workflows, tasks] = await Promise.all([listWorkflows(), listTasks()]);
} catch (e) {
  loadError = e;
}

// Create a map of task names by ID for display
const taskNames = new Map(tasks.map(task => [task.id, task.name]));
---
<AdminLayout>
  <div class="mb-4 flex items-center justify-between">
    <h1 class="text-2xl font-bold">Workflows</h1>
    <Button disabled title="Create functionality coming in Milestone 2">Create Workflow</Button>
  </div>

  {loadError ? (
    <Card>
      <CardContent class="py-6">
        <div class="text-sm text-red-700">Failed to load workflows: {loadError.message}</div>
      </CardContent>
    </Card>
  ) : (
    <div class="space-y-4">
      {workflows.map((workflow) => (
        <Card>
          <CardHeader>
            <div class="flex items-start justify-between">
              <div>
                <CardTitle class="text-base">{workflow.name}</CardTitle>
                <div class="text-sm text-neutral-600 mt-1">
                  {workflow.task_sequence.length} task{workflow.task_sequence.length !== 1 ? 's' : ''}
                </div>
              </div>
              <div class="flex gap-2">
                <span 
                  class={`inline-flex items-center rounded px-2 py-0.5 text-xs font-medium ${workflow.enabled ? 'bg-green-100 text-green-800' : 'bg-neutral-100 text-neutral-700'}`}
                >
                  {workflow.enabled ? 'Enabled' : 'Disabled'}
                </span>
                <Button variant="outline" size="sm" disabled>Execute</Button>
              </div>
            </div>
          </CardHeader>
          <CardContent class="pt-0">
            <div class="space-y-3">
              <div>
                <div class="text-xs font-medium text-neutral-600 mb-1">Description</div>
                <div class="text-sm">{workflow.description}</div>
              </div>
              <div>
                <div class="text-xs font-medium text-neutral-600 mb-1">Task Sequence</div>
                <div class="space-y-2">
                  {workflow.task_sequence.map((taskId, index) => (
                    <div class="flex items-center gap-2">
                      <div class="flex h-6 w-6 items-center justify-center rounded-full bg-neutral-100 text-xs font-medium">
                        {index + 1}
                      </div>
                      <Badge variant="outline" class="text-xs">
                        {taskNames.get(taskId) || taskId}
                      </Badge>
                    </div>
                  ))}
                </div>
              </div>
              <div class="flex gap-2">
                <Button variant="outline" size="sm" disabled>Edit</Button>
                <Button variant="outline" size="sm" disabled>Delete</Button>
              </div>
            </div>
          </CardContent>
        </Card>
      ))}
      
      {workflows.length === 0 && !loadError && (
        <Card>
          <CardContent class="py-8 text-center">
            <div class="text-neutral-500">No workflows configured yet.</div>
          </CardContent>
        </Card>
      )}
    </div>
  )}
</AdminLayout>