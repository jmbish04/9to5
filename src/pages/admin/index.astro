---
import AdminLayout from '../../layouts/AdminLayout.astro';
import { Card, CardHeader, CardTitle, CardContent } from '../../components/ui/card';
import { Button } from '../../components/ui/button';
import { Skeleton } from '../../components/ui/skeleton';
import { getMonitoringStatus } from '../../lib/api';

const fmt = (ts?: string) => ts ? new Date(ts).toLocaleString('en-US', { timeZone: 'America/Los_Angeles' }) : 'â€”';

const { data, error } = await (async () => {
  try {
    return { data: await getMonitoringStatus(), error: null };
  } catch (e) {
    console.error(e);
    return { data: null, error: e };
  }
})();
const hasData =
  data &&
  (data.last_run_at ||
    data.next_scheduled_at ||
    data.queued != null ||
    (data.recent_counts && Object.keys(data.recent_counts).length));
---
<AdminLayout>
  <Card>
    <CardHeader><CardTitle>Monitoring Status</CardTitle></CardHeader>
    <CardContent>
      {
        data ? (
          hasData ? (
            <div class="space-y-1 text-sm">
              <div><span class="font-medium">Last run:</span> {fmt(data.last_run_at)}</div>
              <div><span class="font-medium">Next scheduled:</span> {fmt(data.next_scheduled_at)}</div>
              <div><span class="font-medium">Queued:</span> {data.queued ?? 0}</div>
              {data.recent_counts && (
                <ul class="mt-2 space-y-1">
                  {Object.entries(data.recent_counts).map(([k, v]) => (
                    <li>{k}: {v}</li>
                  ))}
                </ul>
              )}
            </div>
          ) : (
            <div class="text-sm text-muted-foreground">No monitoring data.</div>
          )
        ) : error ? (
          <div class="text-sm text-red-700">
            Failed to load status.
            <button type="button" onclick="location.reload()" class="ml-2 underline">
              Retry
            </button>
          </div>
        ) : (
          <Skeleton class="h-16 w-full" />
        )
      }
      <div class="mt-3">
        <Button id="run-monitor">Run Daily Monitoring</Button>
      </div>
    </CardContent>
  </Card>
</AdminLayout>

<script type="module" lang="ts">
  import { runMonitor } from '../../lib/api';
  const btn = document.getElementById('run-monitor') as HTMLButtonElement | null;
  btn?.addEventListener('click', async () => {
    btn.disabled = true;
    try {
      const res = await runMonitor();
      alert(`Monitor run: ${res.status}`);
      location.reload();
    } catch (err) {
      console.error(err);
      alert('Failed to start monitoring run');
    } finally {
      btn.disabled = false;
    }
  });
</script>
