---
import AdminLayout from '../../layouts/AdminLayout.astro';
import { Card, CardHeader, CardTitle, CardContent } from '../../components/ui/card';
import { Skeleton } from '../../components/ui/skeleton';
import { fmtDateTime } from '../../lib/api';
import MonitoringButton from '../../components/MonitoringButton';

// Server-side data fetching with direct API call including authentication
const { data, error } = await (async () => {
  try {
    const apiToken = import.meta.env.API_TOKEN || 'dev_token_123';
    const response = await fetch('http://localhost:4321/api/monitoring/status', {
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${apiToken}`
      }
    });
    
    if (!response.ok) {
      throw new Error(`Failed to fetch monitoring status: ${response.status}`);
    }
    
    const data = await response.json();
    return { data, error: null };
  } catch (e) {
    console.error('Error fetching monitoring status:', e);
    return { data: null, error: e };
  }
})();

// Get API token for client-side use (in a real app, use a more secure method)
const clientApiToken = 'dev_token_123';
---
<AdminLayout>
  <div class="grid grid-cols-1 gap-4 lg:grid-cols-3">
    <Card>
      <CardHeader><CardTitle>Monitoring Status</CardTitle></CardHeader>
      <CardContent>
        {
          data ? (
            <div class="space-y-1 text-sm">
              <div><span class="font-medium">Active jobs:</span> {data.active_jobs_monitored}</div>
              <div><span class="font-medium">Need check:</span> {data.jobs_needing_check}</div>
              <div><span class="font-medium">Last updated:</span> {fmtDateTime(data.last_updated)}</div>
            </div>
          ) : error ? (
            <div class="text-sm text-red-700">Failed to load status.</div>
          ) : (
            <Skeleton class="h-16 w-full" />
          )
        }
        <form action="javascript:void(0)" class="mt-3">
          <MonitoringButton apiToken={clientApiToken} client:load />
        </form>
      </CardContent>
    </Card>

    <Card class="lg:col-span-2">
      <CardHeader><CardTitle>Recent Activity</CardTitle></CardHeader>
      <CardContent>
        {
          data?.recent_activity?.length
            ? (
              <table class="w-full text-sm">
                <thead class="text-neutral-600">
                  <tr><th class="py-1 text-left">Date</th><th class="py-1 text-left">Checked</th><th class="py-1 text-left">Modified</th><th class="py-1 text-left">Closed</th><th class="py-1 text-left">Errors</th></tr>
                </thead>
                <tbody class="divide-y">
                  {data.recent_activity.map((r) => (
                    <tr>
                      <td class="py-1">{r.tracking_date}</td>
                      <td class="py-1">{r.jobs_checked}</td>
                      <td class="py-1">{r.jobs_modified}</td>
                      <td class="py-1">{r.jobs_closed}</td>
                      <td class="py-1">{r.errors}</td>
                    </tr>
                  ))}
                </tbody>
              </table>
            )
            : <div class="text-sm text-neutral-500">No recent activity.</div>
        }
      </CardContent>
    </Card>

    <Card class="lg:col-span-3">
      <CardHeader><CardTitle>Market Statistics</CardTitle></CardHeader>
      <CardContent>
        {
          data?.market_statistics?.length
            ? (
              <div class="overflow-x-auto">
                <table class="w-full text-sm">
                  <thead class="text-neutral-600">
                    <tr><th class="py-1 text-left">Role</th><th class="py-1 text-left">Location</th><th class="py-1 text-left">Total</th><th class="py-1 text-left">New</th><th class="py-1 text-left">Closed</th><th class="py-1 text-left">Avg Salary</th></tr>
                  </thead>
                  <tbody class="divide-y">
                    {data.market_statistics.map((m) => (
                      <tr>
                        <td class="py-1">{m.role || '—'}</td>
                        <td class="py-1">{m.location || '—'}</td>
                        <td class="py-1">{m.total_jobs ?? '—'}</td>
                        <td class="py-1">{m.new_jobs ?? '—'}</td>
                        <td class="py-1">{m.closed_jobs ?? '—'}</td>
                        <td class="py-1">{(m.avg_salary_min ?? 0).toLocaleString()} – {(m.avg_salary_max ?? 0).toLocaleString()}</td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            )
            : <div class="text-sm text-neutral-500">No stats yet.</div>
        }
      </CardContent>
    </Card>
  </div>
</AdminLayout>
