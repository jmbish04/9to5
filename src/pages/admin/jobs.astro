---
import AdminLayout from '../../layouts/AdminLayout.astro';
import { listJobs } from '../../lib/api';
import InterestSignals from '../../components/admin/InterestSignals';

const url = new URL(Astro.request.url);
const limit = Number(url.searchParams.get('limit') || 25);
const offset = Number(url.searchParams.get('offset') || 0);
const status = (url.searchParams.get('status') || '') as 'open' | 'closed' | '';
const source = (url.searchParams.get('source') || '') as 'SCRAPED' | 'EMAIL' | 'MANUAL' | '';

let jobsData = null;
let loadError = null;
try {
  jobsData = await listJobs({
    limit,
    offset,
    status: status || undefined,
    source: source || undefined
  });
} catch (e) {
  loadError = e;
}

const jobs = jobsData?.jobs || [];
const total = jobsData?.total || 0;
const currentPage = Math.floor(offset / limit) + 1;
const totalPages = Math.ceil(total / limit);

function qs(next: Record<string, string | number | undefined>) {
  const u = new URL(Astro.request.url);
  Object.entries(next).forEach(([k, v]) => {
    if (v === undefined || v === '') u.searchParams.delete(k);
    else u.searchParams.set(k, String(v));
  });
  return `${u.pathname}?${u.searchParams.toString()}`;
}

function getSourceBadgeVariant(source: string) {
  switch (source) {
    case 'EMAIL': return 'accent';
    case 'MANUAL': return 'secondary'; 
    case 'SCRAPED': return 'info';
    default: return 'default';
  }
}
---
<AdminLayout>
  <div class="mb-6">
    <h1 class="text-2xl font-bold text-gray-900">Jobs</h1>
    <p class="mt-1 text-sm text-gray-600">Manage job listings with filtering and monitoring capabilities</p>
  </div>

  <!-- Enhanced Filters -->
  <div class="mb-6 rounded-lg border border-gray-200 bg-white p-4">
    <h2 class="mb-3 text-sm font-medium text-gray-900">Filters</h2>
    <form method="get" class="grid grid-cols-1 gap-4 sm:grid-cols-4">
      <div>
        <label for="status-filter" class="mb-1 block text-xs font-medium text-gray-700">Status</label>
        <select 
          id="status-filter"
          name="status"
          onchange="this.form.submit()"
          class="w-full rounded-md border border-gray-300 bg-white px-3 py-2 text-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500"
        >
          <option value="" selected={status === ''}>All Statuses</option>
          <option value="open" selected={status === 'open'}>Open</option>
          <option value="closed" selected={status === 'closed'}>Closed</option>
        </select>
      </div>
      
      <div>
        <label for="source-filter" class="mb-1 block text-xs font-medium text-gray-700">Source</label>
        <select 
          id="source-filter"
          name="source"
          onchange="this.form.submit()"
          class="w-full rounded-md border border-gray-300 bg-white px-3 py-2 text-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500"
        >
          <option value="" selected={source === ''}>All Sources</option>
          <option value="SCRAPED" selected={source === 'SCRAPED'}>Scraped</option>
          <option value="EMAIL" selected={source === 'EMAIL'}>Email</option>
          <option value="MANUAL" selected={source === 'MANUAL'}>Manual</option>
        </select>
      </div>
      
      <div class="sm:col-span-2">
        <label for="search-input" class="mb-1 block text-xs font-medium text-gray-700">Search <span class="text-gray-500">(coming soon)</span></label>
        <input 
          id="search-input"
          type="text"
          placeholder="Search by title, company, location..."
          disabled
          class="w-full rounded-md border border-gray-300 bg-gray-50 px-3 py-2 text-sm text-gray-500"
        />
      </div>
      
      <!-- Hidden inputs to preserve other filters -->
      <input type="hidden" name="limit" value={limit} />
      <input type="hidden" name="offset" value="0" />
    </form>
  </div>

  <!-- Results Summary -->
  <div class="mb-4 flex items-center justify-between">
    <div class="text-sm text-gray-700">
      {loadError ? (
        <span class="text-red-600">Error loading jobs</span>
      ) : total > 0 ? (
        <span>
          Showing <span class="font-medium">{offset + 1}</span> to{' '}
          <span class="font-medium">{Math.min(offset + limit, total)}</span> of{' '}
          <span class="font-medium">{total}</span> jobs
        </span>
      ) : (
        <span>No jobs found</span>
      )}
    </div>
    
    {total > 0 && (
      <div class="text-sm text-gray-500">
        Page {currentPage} of {totalPages}
      </div>
    )}
  </div>

  <!-- Jobs Table -->
  <div class="overflow-hidden rounded-lg border border-gray-200 bg-white shadow">
    <table class="w-full divide-y divide-gray-200">
      <thead class="bg-gray-50">
        <tr>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wide text-gray-500">
            Job Title
          </th>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wide text-gray-500">
            Company
          </th>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wide text-gray-500">
            Location
          </th>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wide text-gray-500">
            Employment Type
          </th>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wide text-gray-500">
            Status
          </th>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wide text-gray-500">
            Source
          </th>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wide text-gray-500">
            Interest
          </th>
        </tr>
      </thead>
      <tbody class="divide-y divide-gray-200 bg-white">
        {loadError ? (
          <tr>
            <td colspan="7" class="px-6 py-12 text-center text-red-600">
              <div class="text-sm">Failed to load jobs. Please try again.</div>
            </td>
          </tr>
        ) : jobs.length === 0 ? (
          <tr>
            <td colspan="7" class="px-6 py-12 text-center text-gray-500">
              <div class="text-sm">
                {status || source ? 'No jobs found matching your filters.' : 'No jobs available.'}
              </div>
              {(status || source) && (
                <a href="/admin/jobs" class="mt-2 inline-block text-sm text-blue-600 hover:text-blue-500">
                  Clear all filters
                </a>
              )}
            </td>
          </tr>
        ) : (
          jobs.map((job) => (
            <tr key={job.id} class="hover:bg-gray-50">
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="text-sm font-medium text-gray-900">
                  <a 
                    href={`/admin/jobs/${encodeURIComponent(job.id)}`}
                    class="text-blue-600 hover:text-blue-900 hover:underline focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 rounded"
                    aria-label={`View details for ${job.title || 'Untitled'} job`}
                  >
                    {job.title || 'Untitled Job'}
                  </a>
                </div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                {job.company || '—'}
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                {job.location || '—'}
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                {job.employment_type || '—'}
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <span class={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${
                  job.status === 'open' 
                    ? 'bg-green-100 text-green-800' 
                    : job.status === 'closed'
                    ? 'bg-red-100 text-red-800'
                    : 'bg-gray-100 text-gray-800'
                }`}>
                  {job.status || 'Unknown'}
                </span>
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                {job.source ? (
                  <span class={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${
                    job.source === 'SCRAPED' 
                      ? 'bg-blue-100 text-blue-800'
                      : job.source === 'EMAIL'
                      ? 'bg-indigo-100 text-indigo-800' 
                      : job.source === 'MANUAL'
                      ? 'bg-gray-100 text-gray-800'
                      : 'bg-gray-100 text-gray-800'
                  }`} aria-label={`Source: ${job.source}`}>
                    {job.source}
                  </span>
                ) : (
                  <span class="text-gray-400">—</span>
                )}
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <InterestSignals client:load jobId={job.id} />
              </td>
            </tr>
          ))
        )}
      </tbody>
    </table>
  </div>

  <!-- Enhanced Pagination -->
  {total > limit && (
    <div class="mt-6 flex items-center justify-between border-t border-gray-200 bg-white px-4 py-3 sm:px-6">
      <div class="flex flex-1 justify-between sm:hidden">
        <!-- Mobile pagination -->
        {offset > 0 ? (
          <a 
            href={qs({ offset: Math.max(0, offset - limit) })}
            class="relative inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50"
          >
            Previous
          </a>
        ) : (
          <span class="relative inline-flex items-center rounded-md border border-gray-300 bg-gray-50 px-4 py-2 text-sm font-medium text-gray-300">
            Previous
          </span>
        )}
        
        {offset + limit < total ? (
          <a 
            href={qs({ offset: offset + limit })}
            class="relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50"
          >
            Next
          </a>
        ) : (
          <span class="relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-gray-50 px-4 py-2 text-sm font-medium text-gray-300">
            Next
          </span>
        )}
      </div>

      <div class="hidden sm:flex sm:flex-1 sm:items-center sm:justify-between">
        <div>
          <p class="text-sm text-gray-700">
            Showing <span class="font-medium">{offset + 1}</span> to{' '}
            <span class="font-medium">{Math.min(offset + limit, total)}</span> of{' '}
            <span class="font-medium">{total}</span> results
          </p>
        </div>
        
        <div>
          <nav class="isolate inline-flex -space-x-px rounded-md shadow-sm" aria-label="Pagination">
            <!-- Previous button -->
            {currentPage > 1 ? (
              <a 
                href={qs({ offset: Math.max(0, offset - limit) })}
                class="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0"
                aria-label="Go to previous page"
              >
                <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                  <path fill-rule="evenodd" d="M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z" clip-rule="evenodd" />
                </svg>
              </a>
            ) : (
              <span class="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-300 ring-1 ring-inset ring-gray-300">
                <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                  <path fill-rule="evenodd" d="M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z" clip-rule="evenodd" />
                </svg>
              </span>
            )}

            <!-- Simple page numbers -->
            {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {
              const startPage = Math.max(1, Math.min(currentPage - 2, totalPages - 4));
              const page = startPage + i;
              if (page > totalPages) return null;
              
              return page === currentPage ? (
                <a 
                  href={qs({ offset: (page - 1) * limit })}
                  aria-current="page"
                  class="relative z-10 inline-flex items-center bg-blue-600 px-4 py-2 text-sm font-semibold text-white focus:z-20 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-600"
                >
                  {page}
                </a>
              ) : (
                <a 
                  href={qs({ offset: (page - 1) * limit })}
                  class="relative inline-flex items-center px-4 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0"
                  aria-label={`Go to page ${page}`}
                >
                  {page}
                </a>
              );
            })}

            <!-- Next button -->
            {currentPage < totalPages ? (
              <a 
                href={qs({ offset: offset + limit })}
                class="relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0"
                aria-label="Go to next page"
              >
                <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                  <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" />
                </svg>
              </a>
            ) : (
              <span class="relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-300 ring-1 ring-inset ring-gray-300">
                <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                  <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" />
                </svg>
              </span>
            )}
          </nav>
        </div>
      </div>
    </div>
  )}
</AdminLayout>
